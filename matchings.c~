#include "matchings.h"


int map_functions(const char *fpath, const struct stat *stat_buf,
		  int typeflag, struct FTW *ftwbuf){

  struct mappings *ms = &eargs.ms;

  switch (typeflag) {
  case FTW_F: {
    //fprintf(stdout, "fpath: %s \n", fpath);

    eargs.matchings[SRC_FILE] =
      matching_mapping(fpath + 2, ms->m[SRC_FILE], ms->elems[SRC_FILE]);
      
      
    if (eargs.matchings[SRC_FILE] != NULL) {
      printf("Mapping pattern: %s \n", eargs.matchings[SRC_FILE]->pattern);
      printf("To system named: %s \n\n", eargs.matchings[SRC_FILE]->sys_name);
    } else {
      printf("NULL matching.\n\n");
    }
    // Get

    // Final parse call
    

    break;
  }
    
  case FTW_D: {

    // eargs.matchings[SRC_FILE] =
    // matching_mapping(fpath + 2, ms->m[SRC_FILE], ms->elems[SRC_FILE]);
    
    break;
  }
    
  case FTW_DNR: {
    const char *abs_path = realpath(fpath, NULL);
    if (abs_path == NULL) {
      perror("realpath");
      fprintf(stderr,
	      "realpath failed to resolve the unreadable"
	      "directory at relative path \"%s\"\n",
	      abs_path);
    } else {
      fprintf(stderr,
	      "The directory at \"%s\" cannot be read.\n", 
	      abs_path);
      free(abs_path);
    }
    fprintf(stderr, "Do you have rx permissions on the directory?\n");
  }
    
default:
    break;
  }

  return 0;
}
